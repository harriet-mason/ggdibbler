% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale-discretedist.R
\name{scale_discrete_distribution}
\alias{scale_discrete_distribution}
\alias{scale_x_discrete_distribution}
\alias{scale_y_discrete_distribution}
\title{Position scales for discrete distributions}
\usage{
scale_x_discrete_distribution(
  name = waiver(),
  breaks = waiver(),
  labels = waiver(),
  limits = NULL,
  expand = waiver(),
  oob = oob_keep,
  guide = waiver(),
  position = "bottom",
  sec.axis = waiver()
)

scale_y_discrete_distribution(
  name = waiver(),
  breaks = waiver(),
  labels = waiver(),
  limits = NULL,
  expand = waiver(),
  oob = scales::oob_keep,
  guide = waiver(),
  position = "left",
  sec.axis = waiver()
)
}
\arguments{
\item{name}{The name of the scale. Used as the axis or legend title. If
\code{waiver()}, the default, the name of the scale is taken from the first
mapping used for that aesthetic. If \code{NULL}, the legend title will be
omitted.}

\item{expand}{For position scales, a vector of range expansion constants used to add some
padding around the data to ensure that they are placed some distance
away from the axes. Use the convenience function \code{\link[ggplot2:expansion]{expansion()}}
to generate the values for the \code{expand} argument. The defaults are to
expand the scale by 5\% on each side for continuous variables, and by
0.6 units on each side for discrete variables.}

\item{guide}{A function used to create a guide or its name. See
\code{\link[ggplot2:guides]{guides()}} for more information.}

\item{position}{For position scales, The position of the axis.
\code{left} or \code{right} for y axes, \code{top} or \code{bottom} for x axes.}

\item{sec.axis}{\code{\link[ggplot2:dup_axis]{dup_axis()}} is used to specify a secondary axis.}
}
\description{
These scales allow for discrete distributions to be passed to the x and y position by mapping distribution objects
to discrete aesthetics.
These scale can be used similarly to the scale_*_discrete functions, but they do not
accept transformations.
If you want to transform your scale, you should apply a transformation through the coord_* functions,
as they are applied after the stat, so the existing ggplot infastructure can be used.
}
\examples{
library(ggplot2)
# GGPLOT
p <- ggplot(diamonds, aes(x = cut, y = clarity))
p + geom_count(aes(size = after_stat(prop)))
# GGDIBBLER
q <- ggplot(uncertain_diamonds, aes(x = cut, y = clarity))
q + geom_count_sample(aes(size = after_stat(prop)), times=1, alpha=0.1)
}
